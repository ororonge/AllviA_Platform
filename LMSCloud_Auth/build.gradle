plugins {
	id 'org.springframework.boot' version '2.3.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'application'
}

group = 'com.platform'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR9")
	set('jwtVersion', "0.11.1")
}

dependencies {
	
	//compile fileTree (dir: 'lib', include:['**/*.jar'])
	/*
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'
	*/
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-autoconfigure'
	implementation 'org.springframework.security:spring-security-oauth2-resource-server:5.2.1.RELEASE'
	implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    /*
	compile 'io.jsonwebtoken:jjwt:0.9.1'
	compile 'io.jsonwebtoken:jjwt-api:${jwtVersion}'
	compile 'io.jsonwebtoken:jjwt-impl:${jwtVersion}'
	compile 'io.jsonwebtoken:jjwt-jackson:${jwtVersion}'
	*/
	compile  'org.apache.commons:commons-lang3:3.11'
    compile('io.jsonwebtoken:jjwt-api:0.11.1')
    runtime('io.jsonwebtoken:jjwt-impl:0.11.1', 'io.jsonwebtoken:jjwt-jackson:0.11.1')
	compile  'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'
	compile  'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	compile  'org.mariadb.jdbc:mariadb-java-client:1.5.9'
	/*compile  'javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:1.2.1'*/
	compile  'javax.servlet:jstl:1.2'
	/*
	compile  'taglibs:standard:1.1.2'
	*/
	compile  "org.apache.tomcat.embed:tomcat-embed-jasper"
	
	/*
	implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
    implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0.1'
    compile group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0.1'
    compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.0.1'
    compile group: 'javax.activation', name: 'activation', version: '1.1.1'
	*/
	compile('javax.xml.bind:jaxb-api:2.3.0')
	compile('javax.activation:activation:1.1')
	compile('org.glassfish.jaxb:jaxb-runtime:2.3.0')
	compile 'com.sun.activation:javax.activation:1.2.0'
	compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
	compile group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.1'
	
	/*
	compile 'javax.xml.bind:jaxb-api'
	compile 'com.sun.xml.bind:jaxb-core'
	compile 'com.sun.xml.bind:jaxb-impl'
	*/
	/*
	implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
    implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
    compile group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0'
    compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.0'
    compile group: 'javax.activation', name: 'activation', version: '1.1.1'
	*/
	/*
	compile('javax.xml.bind:jaxb-api:2.3.0.1')
	compile('com.sun.xml.bind:jaxb-impl:2.3.0.1')
	compile('com.sun.xml.bind:jaxb-core:2.3.0.1')
	compile('javax.activation:activation:1.1.1')
	*/	
	/*
	compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
    compile group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0'
    compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.0'
    compile group: 'javax.activation', name: 'activation', version: '1.1.1'
	*/
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

bootJar {
   archiveFileName = "${archiveBaseName.get()}_${version}.${archiveExtension.get()}"
}

test {
	useJUnitPlatform()
}

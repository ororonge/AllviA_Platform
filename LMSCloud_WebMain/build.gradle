plugins {
	id 'org.springframework.boot' version '2.3.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'war'
}

group = 'com.platform.web'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "Hoxton.SR9")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	
	compile   'org.springframework.cloud:spring-cloud-starter-openfeign'
	compile  'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'
	compile  'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
	compile  'org.mariadb.jdbc:mariadb-java-client:1.5.9'
	compile  'javax.servlet:jstl'
	compile 'org.apache.tomcat.embed:tomcat-embed-jasper'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

bootJar {
	
	archiveFileName = "${archiveBaseName.get()}_${version}.${archiveExtension.get()}"
	
	// properties ¼³Á¤
    sourceSets {
		ext.profile = (!project.hasProperty('profile') || !profile) ? 'real' : profile
		//println profile
        main {
            resources {
                from ('src/main/resources/properties/' + profile) {
                    into ('WEB-INF/classes/properties')
                }
                exclude 'properties/*'
            }
        }
    }
}

test {
	useJUnitPlatform()
}
